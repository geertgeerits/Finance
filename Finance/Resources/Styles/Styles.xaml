<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>

<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">

    <Style TargetType="Shell" ApplyToDerivedTypes="True">
        <Setter Property="Shell.BackgroundColor" Value="#75F94D" />
        <Setter Property="Shell.ForegroundColor" Value="DarkSlateGray" />
        <Setter Property="Shell.TitleColor" Value="Black" />
    </Style>
    
    <Style TargetType="Page" ApplyToDerivedTypes="True">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
    </Style>

    <Style TargetType="NavigationPage">
        <Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}" />
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource Black}}" />
        <Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource Black}}" />
    </Style>

    <Style TargetType="StackLayout">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style TargetType="Grid">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style TargetType="BoxView">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
    </Style>

    <Style TargetType="Border">
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource MidGray}, Dark={StaticResource MidGray}}" />
        <Setter Property="StrokeShape">
            <Setter.Value>
                <RoundRectangle CornerRadius="5" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label">
        <Setter Property="MinimumHeightRequest" Value="40"/>
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="LineBreakMode" Value="WordWrap" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontAttributes" Value="Bold"/>
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style TargetType="Entry">
        <Setter Property="MinimumHeightRequest" Value="40"/>
        <Setter Property="VerticalTextAlignment" Value="Center" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightEntryBG}, Dark={StaticResource DarkEntryBG}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource MidGray}, Dark={StaticResource Light}}" />
        <Setter Property="ClearButtonVisibility" Value="WhileEditing" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="MinimumHeightRequest" Value="40"/>
        <Setter Property="LineBreakMode" Value="TailTruncation" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource LightGray}, Dark={StaticResource DarkGray}}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontAttributes" Value="Bold"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="#969696" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="0.8" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="HorizontalOptions"  Value="Fill"/>
        <Setter Property="MinimumHeightRequest" Value="40"/>
        <Setter Property="Margin" Value="{OnPlatform 0, Android=0, iOS=0, WinUI='9,0,0,0'}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="MinimumHeightRequest" Value="40"/>
        <Setter Property="HorizontalOptions"  Value="Fill"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightEntryBG}, Dark={StaticResource DarkEntryBG}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style TargetType="Picker">
        <Setter Property="MinimumHeightRequest" Value="40"/>
        <Setter Property="HorizontalOptions"  Value="Fill"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource LightEntryBG}, Dark={StaticResource DarkEntryBG}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontAttributes" Value="Bold"/>
    </Style>

    <Style TargetType="Switch">
        <Setter Property="HorizontalOptions" Value="Start"/>
        <Setter Property="OnColor" Value="LimeGreen" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style x:Key="gridStyleInfo" TargetType="Grid">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 340, Phone=340, Tablet=560, Desktop=560}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 540, Phone=540, Tablet=760, Desktop=760}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Margin" Value="{OnIdiom 5, Phone=5, Tablet=10, Desktop=10}" />
        <Setter Property="RowSpacing" Value="0" />
    </Style>

    <Style x:Key="gridStyleMainMenu" TargetType="Grid">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 340, Phone=340, Tablet=560, Desktop=560}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 540, Phone=540, Tablet=760, Desktop=760}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Margin" Value="{OnIdiom 5, Phone=5, Tablet=10, Desktop=10}" />
        <Setter Property="RowSpacing" Value="6" />
    </Style>

    <!--!!!BUG!!!? - Do not use this style if you need to define another 'Grid ColumnDefinition Width OnIdiom' on another xaml page.-->
    <Style x:Key="gridStyleMenuItems" TargetType="Grid">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 160, Phone=160, Tablet=260, Desktop=260}" />
                                        <ColumnDefinition Width="{OnIdiom 160, Phone=160, Tablet=260, Desktop=260}" />
                                        <ColumnDefinition Width="{OnIdiom 25, Phone=25, Tablet=30, Desktop=30}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 260, Phone=260, Tablet=360, Desktop=360}" />
                                        <ColumnDefinition Width="{OnIdiom 260, Phone=260, Tablet=360, Desktop=360}" />
                                        <ColumnDefinition Width="{OnIdiom 30, Phone=30, Tablet=30, Desktop=30}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Margin" Value="{OnIdiom 5, Phone=5, Tablet=10, Desktop=10}" />
        <Setter Property="ColumnSpacing" Value="{OnIdiom 5, Phone=5, Tablet=15, Desktop=15}" />
        <Setter Property="RowSpacing" Value="4" />
    </Style>

    <Style x:Key="gridStyleMenuItems2" TargetType="Grid">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 170, Phone=170, Tablet=270, Desktop=270}" />
                                        <ColumnDefinition Width="{OnIdiom 170, Phone=170, Tablet=270, Desktop=270}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 270, Phone=270, Tablet=370, Desktop=370}" />
                                        <ColumnDefinition Width="{OnIdiom 270, Phone=270, Tablet=370, Desktop=370}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="Margin" Value="{OnIdiom 5, Phone=5, Tablet=10, Desktop=10}" />
        <Setter Property="ColumnSpacing" Value="{OnIdiom 5, Phone=5, Tablet=15, Desktop=15}" />
        <Setter Property="RowSpacing" Value="4" />
    </Style>

    <Style x:Key="gridStyleSettings" TargetType="Grid">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 170, Phone=170, Tablet=270, Desktop=270}" />
                                        <ColumnDefinition Width="{OnIdiom 170, Phone=170, Tablet=270, Desktop=270}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="ColumnDefinitions">
                                <Setter.Value>
                                    <ColumnDefinitionCollection>
                                        <ColumnDefinition Width="{OnIdiom 270, Phone=270, Tablet=370, Desktop=370}" />
                                        <ColumnDefinition Width="{OnIdiom 270, Phone=270, Tablet=370, Desktop=370}" />
                                    </ColumnDefinitionCollection>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="ColumnSpacing" Value="{OnIdiom 5, Phone=5, Tablet=15, Desktop=15}" />
        <Setter Property="RowSpacing" Value="2" />
    </Style>

    <!--!!!BUG!!! in Android.
            Need to set the BackgroundColor to Transparent otherwise a part of the background is white or black when used with Label, RadioButton and CheckBox.-->
    <Style x:Key="borderStyleDefault" TargetType="Border">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style x:Key="borderStyleGroup" TargetType="Border">
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style x:Key="labelStyleDefault" TargetType="Label">
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <Style x:Key="labelStyleTitleView" TargetType="Label">
        <Setter Property="Margin" Value="4" />
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="TextColor" Value="Black" />
        <Setter Property="FontAutoScalingEnabled" Value="False" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="LineBreakMode" Value="TailTruncation" />
    </Style>

    <Style x:Key="labelStyleInfo" TargetType="Label">
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="MinimumHeightRequest" Value="25"/>
    </Style>

    <Style x:Key="labelStyleExplanation" TargetType="Label">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DarkGray}, Dark={StaticResource LightGray}}" />
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Black}}" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="labelStylePercent" TargetType="Label">
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Text" Value="%" />
    </Style>

    <Style x:Key="labelStyleResult" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Text" Value="" />
        <Setter Property="HorizontalTextAlignment" Value="End" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="labelStyleResultDate" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="Text" Value="" />
        <Setter Property="HorizontalTextAlignment" Value="End" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style x:Key="entryStyleDefault" TargetType="Entry">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
        <Setter Property="Keyboard" Value="Default" />
        <Setter Property="ReturnType" Value="Next" />
    </Style>

    <Style x:Key="entryStyleNumericNext" TargetType="Entry">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="End" />
        <Setter Property="Keyboard" Value="Numeric" />
        <Setter Property="ReturnType" Value="Next" />
    </Style>

    <Style x:Key="entryStyleNumericDone" TargetType="Entry">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="End" />
        <Setter Property="Keyboard" Value="Numeric" />
        <Setter Property="ReturnType" Value="Done" />
    </Style>

    <Style x:Key="buttonStyleDefault" TargetType="Button">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <Style x:Key="buttonStyleFill" TargetType="Button">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <!--!!!BUG!!! - Have to make a 'buttonStyleFixedStart' style and a 'buttonStyleFixedEnd' style,
            otherwise the 'WidthRequest' of the start button is not set to '270' but stays at '170'.-->
    <Style x:Key="buttonStyleFixedStart" TargetType="Button">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="WidthRequest" Value="{OnIdiom 170, Phone=170, Tablet=270, Desktop=270}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="WidthRequest" Value="{OnIdiom 270, Phone=270, Tablet=370, Desktop=370}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="Start" />
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <Style x:Key="buttonStyleFixedEnd" TargetType="Button">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup>
                    <VisualState x:Name="Portrait">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Portrait" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="WidthRequest" Value="{OnIdiom 170, Phone=170, Tablet=270, Desktop=270}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Landscape">
                        <VisualState.StateTriggers>
                            <OrientationStateTrigger Orientation="Landscape" />
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Property="WidthRequest" Value="{OnIdiom 270, Phone=270, Tablet=370, Desktop=370}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
        <Setter Property="HorizontalOptions" Value="End" />
        <Setter Property="VerticalOptions" Value="Center" />
    </Style>

    <Style x:Key="buttonStyleMenu" TargetType="Button">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <!--<Setter Property="LineBreakMode" Value="WordWrap" /> !!!BUG!!! in IOS. The height of the label is not automatically adjusted according to the text size.-->
        <!--<Setter Property="LineBreakMode" Value="{OnPlatform WordWrap, iOS=TailTruncation, Android=WordWrap}" />-->
        <Setter Property="LineBreakMode" Value="TailTruncation" />
    </Style>

    <Style x:Key="buttonStyleCalculate" TargetType="Button">
        <Setter Property="Margin" Value="0,6,0,0" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Text" Value="Calculate" />
    </Style>

    <Style x:Key="buttonStyleReset" TargetType="Button">
        <Setter Property="Margin" Value="0,6,0,0" />
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="VerticalOptions" Value="Center" />
        <Setter Property="Text" Value="Reset" />
    </Style>

    <Style x:Key="buttonStyleWebsite" TargetType="Button">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="VerticalOptions" Value="Start" />
        <Setter Property="WidthRequest" Value="50" />
        <Setter Property="FontAutoScalingEnabled" Value="False" />
        <Setter Property="FontSize" Value="28" />
        <Setter Property="IsEnabled" Value="True" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="Black" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="#969696" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style x:Key="radiobuttonStyleBorder" TargetType="RadioButton">
        <Setter Property="HorizontalOptions" Value="Fill" />
        <Setter Property="BorderColor" Value="{AppThemeBinding Light={StaticResource MidGray}, Dark={StaticResource MidGray}}" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
    </Style>

</ResourceDictionary>
